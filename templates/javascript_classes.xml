<templateSet group="javascript_classes">
  <template name="class" value="class $NAME$ {&#10;    $END$&#10;}" description="class definition" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ext" value="extends $CLASS$" description="extends statement" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="imp" value="implements $CLASS$" description="implements statement" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="con" value="constructor($PARAMS$) {&#10;    $END$&#10;}" description="constructor definition" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="schema" value="const mongoose = require('mongoose');&#10;const Schema = mongoose.Schema;&#10;&#10;const $NAME$Schema = new Schema({&#10;  $END$ &#10;});&#10;&#10;module.exports = mongoose.model('$NAME$', $NAME$Schema);" description="schema definition" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_CLASS" value="true" />
    </context>
  </template>
</templateSet>